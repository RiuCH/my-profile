---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="Riu Cherdchusakulchai">
    
    <header>
      {/* Site title remains above the flex layout */}
      <h1 class="site-title">Riu Cherdchusakulchai</h1> 
      
      
      {/* Container to apply flexbox */}
      <div class="header-content"> 
        {/* Container for intro text elements */}
        <div class="intro-content"> 
          <h2 class="intro-text">Hello guys! I'm Riu (à¸£à¸´à¸§) ðŸ‘‹</h2> 
          <p class="intro-text">I am a Master's student in Computer Vision in the <a href="https://www.ri.cmu.edu/" target="_blank">Robotics Institute</a> at Carnegie Mellon University.
              I am advised by Prof. <a href="http://www.cs.cmu.edu/~ftorre/" target="_blank">Fernando De la Torre</a>, working in the <a href="http://humansensing.cs.cmu.edu/" target="_blank">Human Sensing Lab</a>.
              Before that, I had three years working experience as a Machine Learning Engineer at <a href="https://arv.co.th/en" target="_blank">AI and Robotics Ventures</a>.
              I received my Bachelor's degree in Mechanical Engineering from Chulalongkorn University, advised by Prof. <a href="https://sites.google.com/view/chulaxcps/people" target="_blank">Nattapol Damrongplasit</a>.<br><br>
              
              My research interests lie at the intersection of 3D vision, spatial intelligence, and robotics. I'm particularly interested in neural scene reconstruction and 3D understanding for augmented reality and robotics applications.
           
            </p>
          <a href="/my-profile/files/resume.pdf" download class="btn">Download Resume</a>
        </div>
        
        {/* Profile picture container */}
        <div class="profile-container">
          <img src="/my-profile/images/profile.jpg" alt="Profile Photo of Riu Cherdchusakulchai" class="profile-photo" />
        </div>

      </div> 
      
    </header>

    {/* Container for the two sections */}
    <div class="sections-container"> 
      <section id="education" class="section">
          <h2></i> ðŸŽ“ Education</h2>
        <div class="card-container">
          
          {/* Card 1: Education */}
          <article class="card">
            {/* *** ADDED Card Header for Icon + Title/Date *** */}
            <div class="card-header">
              <div class="card-logo">
                <a href="https://www.ri.cmu.edu"
                  target="_blank" 
                  rel="noopener noreferrer" 
                  title="Visit CMU Robotics Institute Website">
                  <div class="card-logo">
                    <img src="/my-profile/images/logos/CMU.png" alt="CMULogo">
                  </div> 
                </a>
              </div>
              <div class="card-title-date">
                 <h3>Carnegie Mellon University, Pittsburgh, PA</h3>
                 <h3>M.S. Computer Vision</h3>
                 <p class="date"><em>Aug 2025 - Present</em></p>
              </div>
            </div>
            {/* *** List items remain below header *** */}
            <ul>
			  <!-- <li>CGPA: </li> -->
              <li>Coursework: Advanced Computer Vision, Learning for 3D Vision, Robot Learning</li>
            </ul>
          </article>

          {/* Card 2: Education */}
          <article class="card">
             {/* *** ADDED Card Header for Icon + Title/Date *** */}
             <div class="card-header">
                <a href="https://me.eng.chula.ac.th"
                    target="_blank" 
                    rel="noopener noreferrer" 
                    title="Visit CU Meachanical Engineering Website">
                  <div class="card-logo">
                      <img src="/my-profile/images/logos/CU.jpg" alt="CULogo"> 
                  </div> 
                </a>
                <div class="card-title-date">
                    <h3>Chulalongkorn University, Bangkok, Thailand</h3>
                    <h3>B.Eng. Mechanical Engineering</h3>
                    <p class="date"><em>May 2018 - May 2022</em></p>
                </div>
             </div>
             {/* *** List items remain below header *** */}
            <ul>
               <li>CGPA: 3.60</li>
               <li>First Class Honors</li>
               <li>Coursework: Machine Learning, Auto Control, Mechatronics, Internet of Things, Numerical Methods, Mechanics of Machinery, Mechanical Vibration, Thermodynamics, Fluid Mechanics, Heat Transfer, Multvariable Calculus, Linear Algebra, Differential Equations</li>
            </ul>
          </article>

        </div>
      </section>

      
      <section id="experience" class="section">
          <h2> ðŸ’¼ Experience</h2>
        <div class="card-container">
             
             {/* Card 1: Experience */}
            <article class="card">
              {/* *** ADDED Card Header for Icon + Title/Date *** */}
              <div class="card-header">
                <a href="https://arv.co.th/en"
                    target="_blank" 
                    rel="noopener noreferrer" 
                    title="Visit ARV Website">
                  <div class="card-logo">
                    <img src="/my-profile/images/logos/ARV.jpeg" alt="ARVLogo"> 
                  </div> 
                </a>
                <div class="card-title-date">
                    <h3>AI and Robotics Ventures Company, Bangkok, Thailand</h3>
					          <h3>Machine Learning Engineer</h3>
                    <p class="date"><em>May 2022 - May 2025</em></p>
                </div>
              </div>
              {/* *** List items remain below header *** */}
              <ul>
                <li>ML Inference Pipeline for Visual Intelligence Product (DeepZoom)</li>
                <li>Multi-Target Multi-Camera Tracking System</li>
				<li>Person and Vehicle Re-Identification System</li>
				<li>6D Object Pose Estimation for Remote Valve Operation</li>
				<li>Real-time Multiple Analog Gauges Reader</li>
              </ul>
            </article>

          </div>
      </section>
    </div>

	<script>

    function setupClickableName() {
        console.log("setupClickableName function CALLED"); 
        const siteTitleElement = document.querySelector('.site-title');
        console.log("Site title element found:", siteTitleElement); 
        
        if (siteTitleElement) {
          const firstNames = ['Riu', 'Ryu', 'Rew']; 
          const lastName = ' Cherdchusakulchai'; 
          const storageKey = 'siteTitleNameIndex'; // Key for localStorage
      
          // --- Logic on Page Load ---
          let currentNameIndex = 0; // Default starting index
          try {
              // 1. Get the last saved index from localStorage
              const savedIndex = localStorage.getItem(storageKey);
              console.log("Saved index from localStorage:", savedIndex);
      
              if (savedIndex !== null) {
                  // 2. If found, parse it and calculate the *next* index for this load
                  let lastIndex = parseInt(savedIndex, 10);
                  // Check if parsing was successful
                  if (!isNaN(lastIndex)) {
                      // Increment and wrap around to get the index for *this* page load
                      currentNameIndex = (lastIndex + 1) % firstNames.length; 
                      console.log("Calculated next index based on saved:", currentNameIndex);
                  } else {
                      // Handle cases where saved value isn't a number
                      console.warn("Saved index was not a number, starting from 0.");
                      currentNameIndex = 0; // Fallback to 0
                  }
              } else {
                  // 3. If no saved index (first visit), use the default index 0
                  console.log("No saved index found, starting from 0.");
                  currentNameIndex = 0; 
              }
      
              // 4. Save the *current* index (for this page load) back to localStorage
              // This ensures the *next* refresh knows what came before.
              localStorage.setItem(storageKey, currentNameIndex.toString());
              console.log("Saved current index to localStorage:", currentNameIndex);
      
          } catch (error) {
              // Handle potential localStorage errors (e.g., private browsing mode)
              console.error("Error accessing localStorage:", error);
              // Fallback to default index 0 if localStorage fails
              currentNameIndex = 0; 
          }
      
          // 5. Update the text content immediately on load using the calculated index
          const initialFirstName = firstNames[currentNameIndex];
          siteTitleElement.textContent = initialFirstName + lastName;
          console.log("Initial text content set to:", siteTitleElement.textContent);
      
          // --- End Logic on Page Load ---
      
          // Set styles for clickability
          siteTitleElement.style.cursor = 'pointer'; 
          siteTitleElement.style.userSelect = 'none'; 
      
          // Add the click event listener
          siteTitleElement.addEventListener('click', () => {
            console.log("Site title CLICKED!"); 
            // Calculate the next index based on the *current* state shown on the page
            currentNameIndex = (currentNameIndex + 1) % firstNames.length; 
            console.log("New name index after click:", currentNameIndex); 
            
            const newFirstName = firstNames[currentNameIndex];
            siteTitleElement.textContent = newFirstName + lastName;
            console.log("Updated text content to:", siteTitleElement.textContent); 
      
            // *** ADDED: Save the new index to localStorage *after click* ***
            // This ensures the next refresh continues from the clicked state.
            try {
                localStorage.setItem(storageKey, currentNameIndex.toString());
                console.log("Saved index to localStorage after click:", currentNameIndex);
            } catch (error) {
                console.error("Error saving to localStorage after click:", error);
            }
          });
          console.log("Click listener ADDED to site title."); 
        } else {
            // Log an error if the element wasn't found
            console.error("Site title element (.site-title) not found.");
        }
      }
		
		document.addEventListener("astro:page-load", ()  => {
	
		  // Call the setup function for the clickable name
		  setupClickableName(); 
	
		  // Intersection Observer for section animations
		  const sections = document.querySelectorAll('.section');
		  if (sections.length > 0) {
			  const observerOptions = { threshold: 0.1 };
			  const observerCallback = (entries, observer) => {
				entries.forEach(entry => {
				  if (entry.isIntersecting) {
					entry.target.classList.add('visible');
					observer.unobserve(entry.target); 
				  }
				});
			  };
			  const observer = new IntersectionObserver(observerCallback, observerOptions);
			  sections.forEach(section => observer.observe(section));
		  }
	});
	</script>

</BaseLayout>
